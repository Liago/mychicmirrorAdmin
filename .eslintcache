[{"/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/index.tsx":"1","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/App.js":"2","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/serviceWorker.ts":"3","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/store/reducers/reducers.js":"4","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/pages/notifications.js":"5","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/Menu.js":"6","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/pages/users.js":"7","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/pages/home.js":"8","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/UI/toast.js":"9","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/store/actions/actionTypes.js":"10","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/allComments.js":"11","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/list.js":"12","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/UI/skeleton.js":"13","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/user.js":"14","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/store/actions/index.js":"15","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/UI/actionSheet.js":"16","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/store/actions/users.js":"17","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/store/actions/main.js":"18","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/store/actions/toast.js":"19","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/store/actions/admin.js":"20","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/helpers/config.js":"21","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/user_utilities.js":"22","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/UI/modal.js":"23","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/comments.js":"24","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/UI/skeleton_list.js":"25","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/helpers/rest.js":"26","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/forms/notification.js":"27","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/forms/render.js":"28"},{"size":1031,"mtime":1603180560336,"results":"29","hashOfConfig":"30"},{"size":1966,"mtime":1610116647378,"results":"31","hashOfConfig":"30"},{"size":5213,"mtime":1601044952000,"results":"32","hashOfConfig":"30"},{"size":4414,"mtime":1609928078106,"results":"33","hashOfConfig":"30"},{"size":655,"mtime":1607526641455,"results":"34","hashOfConfig":"30"},{"size":3149,"mtime":1609928078104,"results":"35","hashOfConfig":"30"},{"size":3732,"mtime":1610116564047,"results":"36","hashOfConfig":"30"},{"size":3300,"mtime":1609929762135,"results":"37","hashOfConfig":"30"},{"size":850,"mtime":1603372691076,"results":"38","hashOfConfig":"30"},{"size":1715,"mtime":1609928078105,"results":"39","hashOfConfig":"30"},{"size":5428,"mtime":1609928078105,"results":"40","hashOfConfig":"30"},{"size":2654,"mtime":1610362535878,"results":"41","hashOfConfig":"30"},{"size":640,"mtime":1602836306000,"results":"42","hashOfConfig":"30"},{"size":7024,"mtime":1606994995119,"results":"43","hashOfConfig":"30"},{"size":280,"mtime":1609928078105,"results":"44","hashOfConfig":"30"},{"size":1183,"mtime":1606986028613,"results":"45","hashOfConfig":"30"},{"size":4626,"mtime":1606992497615,"results":"46","hashOfConfig":"30"},{"size":1347,"mtime":1609928078106,"results":"47","hashOfConfig":"30"},{"size":266,"mtime":1603371069198,"results":"48","hashOfConfig":"30"},{"size":2063,"mtime":1607263819826,"results":"49","hashOfConfig":"30"},{"size":71,"mtime":1608634763773,"results":"50","hashOfConfig":"30"},{"size":1394,"mtime":1606821970727,"results":"51","hashOfConfig":"30"},{"size":1143,"mtime":1609928078103,"results":"52","hashOfConfig":"30"},{"size":3469,"mtime":1603960864802,"results":"53","hashOfConfig":"30"},{"size":501,"mtime":1606994440280,"results":"54","hashOfConfig":"30"},{"size":1514,"mtime":1603282972622,"results":"55","hashOfConfig":"30"},{"size":1512,"mtime":1609928078104,"results":"56","hashOfConfig":"30"},{"size":2792,"mtime":1603189876576,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"ilcwja",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"63"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"63"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"63"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"63"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"63"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"63"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/index.tsx",[],["125","126"],"/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/App.js",[],["127","128"],"/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/serviceWorker.ts",[],"/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/store/reducers/reducers.js",["129"],"import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n\tapp: {\n\t\tdarkMode: false,\n\t\tdevMode:false,\n\t\tnotificationSegment: \"Subscribed Users\",\n\t\tloading: false,\n\t\terror: null,\n\t\tisMessageDelete:false,\n\t\tnotificationMessage: null,\n\t},\n\tuser: {\n\t\tmessage: null,\n\t\tloaded: false,\n\t\tdeleted: false,\n\t\tcreated: false,\n\t\tnotified: false,\n\t\tuserList: [],\n\t\treplied: false\n\t},\n\ttoast: null,\n};\nconst toast = (state = initialState.toast, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.TOAST_CLEAR:\n\t\t\treturn initialState.toast\n\t\tcase actionTypes.TOAST_SET_VALUE:\n\t\t\treturn { ...action.payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\nconst app = (state = initialState.app, action) => {\n\tswitch (action.type) {\n\t\t\n\t\tcase actionTypes.DEV_MODE_SET:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdevMode: true,\n\t\t\t\tnotificationSegment: \"TEST USERS\"\n\t\t\t};\n\t\tcase actionTypes.PROD_MODE_SET:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdevMode: false,\n\t\t\t\tnotificationSegment: \"Subscribed Users\"\n\t\t\t};\n\t\tcase actionTypes.DARK_MODE_SET:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdarkMode: true,\n\t\t\t};\n\t\tcase actionTypes.NORMAL_MODE_SET:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdarkMode: false,\n\t\t\t};\n\t\tcase actionTypes.SEND_NOTIFICATION_FAIL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: action.error,\n\t\t\t\tnotificationMessage: null,\n\t\t\t};\n\t\tcase actionTypes.SEND_NOTIFICATION_START:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t\tnotificationMessage: null,\n\t\t\t};\n\t\tcase actionTypes.SEND_NOTIFICATION_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tnotificationMessage: action.message,\n\t\t\t};\n\t\tcase actionTypes.ALL_COMMENTS_START:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase actionTypes.ALL_COMMENTS_FAIL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: action.error,\n\t\t\t};\n\t\tcase actionTypes.ALL_COMMENTS_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tallComments: action.payload,\n\t\t\t};\n\t\tcase actionTypes.COMMENT_UPDATE_START:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t\terror:false\n\t\t\t}\t\t\n\t\tcase actionTypes.COMMENT_UPDATE_FAIL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: action.payload\n\t\t\t}\t\t\n\t\tcase actionTypes.COMMENT_UPDATE_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tisMessageDelete:action.isMessageDelete,\n\t\t\t\tnotificationMessage: action.payload\n\t\t\t}\t\t\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst user = (state = initialState.user, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.LOAD_USER_START:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase actionTypes.LOAD_USER_SUCCESS:\n\t\t\tconsole.log(\"action\", action);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tloaded: true,\n\t\t\t\tuserList: action.userList.data,\n\t\t\t};\n\t\tcase actionTypes.LOAD_USER_FAIL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: action.error,\n\t\t\t};\n\n\t\tcase actionTypes.USER_REGISTRATION_FAIL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: action.error,\n\t\t\t\tmessage: null,\n\t\t\t};\n\t\tcase actionTypes.USER_REGISTRATION_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tcreated: true,\n\t\t\t\tmessage: action.message,\n\t\t\t};\n\t\tcase actionTypes.USER_REGISTRATION_START:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t\tmessage: null,\n\t\t\t};\n\t\tcase actionTypes.USER_DELETE_FAIL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: action.error,\n\t\t\t\tmessage: null,\n\t\t\t};\n\t\tcase actionTypes.USER_DELETE_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tdeleted: true,\n\t\t\t\tmessage: action.message,\n\t\t\t};\n\t\tcase actionTypes.USER_DELETE_START:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t\tmessage: null,\n\t\t\t};\n\t\tcase actionTypes.LOAD_COMMENTS_FAIL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: action.error,\n\t\t\t\tcommentsList: [],\n\t\t\t};\n\t\tcase actionTypes.LOAD_COMMENTS_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tcommentsList: action.commentsList,\n\t\t\t};\n\t\tcase actionTypes.LOAD_COMMENTS_START:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t\tcommentsList: [],\n\t\t\t};\n\t\tcase actionTypes.REPLY_COMMENTS_FAIL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: action.payload,\n\t\t\t\treplied: false,\n\t\t\t};\n\t\tcase actionTypes.REPLY_COMMENTS_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\treplied: action.payload,\n\t\t\t};\n\t\tcase actionTypes.REPLY_COMMENTS_START:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t\treplied: false\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default { app, user, toast };\n","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/pages/notifications.js",[],"/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/Menu.js",[],"/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/pages/users.js",["130"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n\tIonAlert,\n\tIonButton,\n\tIonButtons,\n\tIonContent,\n\tIonHeader,\n\tIonIcon,\n\tIonMenuButton,\n\tIonModal,\n\tIonPage,\n\tIonRefresher,\n\tIonRefresherContent,\n\tIonTitle,\n\tIonToolbar,\n} from \"@ionic/react\";\nimport { loadUsers, userRegistration } from \"../store/actions\";\nimport List from \"../components/list\";\nimport User from \"../components/user\";\nimport Placeholder from \"../components/UI/skeleton\";\n\nimport { personAddOutline, refreshOutline } from \"ionicons/icons\";\n\nconst Users = (props) => {\n\tconst [userSelected, selectUser] = useState(null);\n\tconst [isModalVisibile, setModalState] = useState(false);\n\tconst [userAlert, setUserAlert] = useState(false);\n\tconst [isRefreshing, doRefresh] = useState(false);\n\n\tuseEffect(() => {\n\t\tprops.onLoadUserSubscribed();\n\t}, [isRefreshing, props.isUserCreated]);\n\n\tconst handleSelection = (user) => {\n\t\tselectUser(user);\n\t\tsetModalState(true);\n\t};\n\tconst addUser = (params) => {\n\t\tprops.onUserRegistration(params);\n\t};\n\n\tconst refresh = (event) => {\n\t\tdoRefresh(true);\n\t\tsetTimeout(() => {\n\t\t\tdoRefresh(false);\n\t\t\tevent.detail.complete();\n\t\t}, 2000);\n\t};\n\n\treturn (\n\t\t<IonPage id=\"page-users\" className=\"bg-gray-900\">\n\t\t\t<IonContent>\n\t\t\t\t<IonHeader>\n\t\t\t\t\t<IonToolbar>\n\t\t\t\t\t\t<IonButtons slot=\"start\">\n\t\t\t\t\t\t\t<IonMenuButton />\n\t\t\t\t\t\t</IonButtons>\n\t\t\t\t\t\t<IonTitle>Users</IonTitle>\n\t\t\t\t\t\t<IonButtons slot=\"end\">\n\t\t\t\t\t\t\t<IonButton color=\"primary\" onClick={() => setUserAlert(true)}>\n\t\t\t\t\t\t\t\t<IonIcon slot=\"icon-only\" ios={personAddOutline} md={personAddOutline} />\n\t\t\t\t\t\t\t</IonButton>\n\t\t\t\t\t\t</IonButtons>\n\t\t\t\t\t</IonToolbar>\n\t\t\t\t</IonHeader>\n\t\t\t\t<IonContent fullscreen=\"true\" className=\"container mx-auto bg-gray-100\">\n\t\t\t\t\t<IonRefresher slot=\"fixed\" onIonRefresh={refresh}>\n\t\t\t\t\t\t<IonRefresherContent\n\t\t\t\t\t\t\tpullingIcon={refreshOutline}\n\t\t\t\t\t\t\tpull-factor=\"200\"\n\t\t\t\t\t\t\tpullingText=\"Pull to refresh\"\n\t\t\t\t\t\t\trefreshingSpinner=\"crescent\"\n\t\t\t\t\t\t\trefreshingText=\"Refreshing...\"\n\t\t\t\t\t\t></IonRefresherContent>\n\t\t\t\t\t</IonRefresher>\n\t\t\t\t\t{props.isLoading ? <Placeholder rows={10} /> : <List users={props.users} onSelectUser={(user) => handleSelection(user)} />}\n\t\t\t\t</IonContent>\n\t\t\t\t<IonModal\n\t\t\t\t\tisOpen={isModalVisibile}\n\t\t\t\t\tshowBackdrop={false}\n\t\t\t\t\tswipeToClose={true}\n\t\t\t\t\tcssClass=\"modalParse\"\n\t\t\t\t\tonDidDismiss={() => setModalState(false)}\n\t\t\t\t>\n\t\t\t\t\t<User user={userSelected} closeModal={setModalState} />\n\t\t\t\t</IonModal>\n\t\t\t\t<IonAlert\n\t\t\t\t\tisOpen={userAlert}\n\t\t\t\t\tonDidDismiss={() => setUserAlert(false)}\n\t\t\t\t\tcssClass=\"my-custom-class\"\n\t\t\t\t\theader={\"New User registration\"}\n\t\t\t\t\tmessage={\"Register a new user filling out every field\"}\n\t\t\t\t\tinputs={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\t\ttype: \"text\",\n\t\t\t\t\t\t\tplaceholder: \"User name\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"email\",\n\t\t\t\t\t\t\ttyep: \"email\",\n\t\t\t\t\t\t\tplaceholder: \"Email\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"password\",\n\t\t\t\t\t\t\ttype: \"password\",\n\t\t\t\t\t\t\tplaceholder: \"Password\",\n\t\t\t\t\t\t\tcssClass: \"specialClass\",\n\t\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\t\tminLength: 8,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t]}\n\t\t\t\t\tbuttons={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: \"Cancel\",\n\t\t\t\t\t\t\trole: \"cancel\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: \"Ok\",\n\t\t\t\t\t\t\thandler: (values) => {\n\t\t\t\t\t\t\t\t// console.log('values', values)\n\t\t\t\t\t\t\t\taddUser(values);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</IonContent>\n\t\t</IonPage>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tusers: state.user.userList,\n\t\tuserRegistered: state.user.message,\n\t\tisLoading: state.app.loading,\n\t};\n};\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonLoadUserSubscribed: () => dispatch(loadUsers()),\n\t\tonUserRegistration: (params) => dispatch(userRegistration(params)),\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);\n","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/pages/home.js",["131","132"],"import { size, isNil } from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n\tIonButtons,\n\tIonContent,\n\tIonHeader,\n\tIonMenuButton,\n\tIonPage,\n\tIonRefresher,\n\tIonRefresherContent,\n\tIonSegment,\n\tIonSegmentButton,\n\tIonTitle,\n\tIonToolbar,\n\tuseIonViewWillEnter,\n} from \"@ionic/react\";\n\nimport CommentsList from \"../components/allComments\";\nimport { getAllComments } from \"../store/actions\";\nimport Placeholder from \"../components/UI/skeleton\";\nimport { refreshOutline } from \"ionicons/icons\";\nimport { Icon } from \"semantic-ui-react\";\n\nconst HomePage = (props) => {\n\t// console.log(\"HOMEPAGE props\", props);\n\tconst [isRefreshing, doRefresh] = useState(false);\n\tconst [view, setView] = useState(\"all\");\n\tconst [loading, setLoading] = useState(false);\n\tconst [allComments, setAllComments] = useState(null);\n\tconst [spam, setspam] = useState(null)\n\n\tuseIonViewWillEnter(() => {\n\t\treadComments();\n\t});\n\n\tconst readComments = () => {\n\t\tsetLoading(true);\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await props.onLoadAllComments();\n\t\t\t\tconsole.log(\"response.allComments.comments\", response);\n\t\t\t\tsetAllComments(response.allComments.comments);\n\t\t\t\tsetspam(response.allComments.total_spam);\n\t\t\t\tsetLoading(response.loading);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t})();\n\t};\n\n\tconst refresh = (event) => {\n\t\tdoRefresh(true);\n\t\treadComments();\n\t\tsetTimeout(() => {\n\t\t\tdoRefresh(false);\n\t\t\t// event.detail.complete();\n\t\t}, 2000);\n\t};\n\n\tconst showComments = () => {\n\t\treturn loading || isNil(allComments) ? (\n\t\t\t<Placeholder rows={10} />\n\t\t) : (\n\t\t\t\t<CommentsList\n\t\t\t\t\tlist={allComments}\n\t\t\t\t\tview={view}\n\t\t\t\t\tdoRefresh={() => refresh()}\n\t\t\t\t\tavatar={\"images/default_avatar.jpg\"}\n\t\t\t\t/>\n\t\t\t);\n\t};\n\n\treturn (\n\t\t<IonPage id=\"home-page\">\n\t\t\t<IonHeader>\n\t\t\t\t<IonToolbar>\n\t\t\t\t\t<IonButtons slot=\"start\">\n\t\t\t\t\t\t<IonMenuButton />\n\t\t\t\t\t</IonButtons>\n\t\t\t\t\t<IonTitle>Last {size(allComments)} comments</IonTitle>\n\t\t\t\t</IonToolbar>\n\t\t\t\t<IonToolbar>\n\t\t\t\t\t<IonSegment value={view} onIonChange={(e) => setView(e.detail.value)}>\n\t\t\t\t\t\t<IonSegmentButton value=\"all\">\n\t\t\t\t\t\t\t{isNil(allComments) || loading\n\t\t\t\t\t\t\t\t? <Icon className=\"icons asterisk loading inverted grey\" />\n\t\t\t\t\t\t\t\t: `Comments ${size(allComments) - parseInt(spam)}`}\n\t\t\t\t\t\t</IonSegmentButton>\n\t\t\t\t\t\t<IonSegmentButton value=\"spam\" color=\"red\">\n\t\t\t\t\t\t\t{isNil(spam) || loading\n\t\t\t\t\t\t\t\t? <Icon className=\"icons asterisk loading inverted grey\" />\n\t\t\t\t\t\t\t\t: `Spam ${spam}`}\n\t\t\t\t\t\t</IonSegmentButton>\n\t\t\t\t\t</IonSegment>\n\t\t\t\t</IonToolbar>\n\t\t\t</IonHeader>\n\t\t\t<IonContent fullscreen=\"true\">\n\t\t\t\t<IonRefresher slot=\"fixed\" onIonRefresh={refresh}>\n\t\t\t\t\t<IonRefresherContent\n\t\t\t\t\t\tpullingIcon={refreshOutline}\n\t\t\t\t\t\tpull-factor=\"200\"\n\t\t\t\t\t\tpullingText=\"Pull to refresh\"\n\t\t\t\t\t\trefreshingSpinner=\"crescent\"\n\t\t\t\t\t\trefreshingText=\"Refreshing...\"\n\t\t\t\t\t></IonRefresherContent>\n\t\t\t\t</IonRefresher>\n\t\t\t\t{showComments()}\n\t\t\t</IonContent>\n\t\t</IonPage>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisLoading: state.app.loading,\n\t\tisUpdated: state.app.notificationMessage,\n\t\tisCommentDeleted: state.app.isMessageDelete,\n\t};\n};\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonLoadAllComments: () => dispatch(getAllComments()),\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/UI/toast.js",[],"/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/store/actions/actionTypes.js",[],"/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/allComments.js",["133","134","135","136","137","138","139","140"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Card, Icon, Image, Label, Segment } from \"semantic-ui-react\";\nimport Modal from \"../components/UI/modal\";\nimport moment from \"moment\";\nimport { updateComment, sendCommentReply } from \"../store/actions\";\nimport { ONESIGNAL_APP_ID } from \"../helpers/config\";\n// import { IonActionSheet } from \"@ionic/react\";\nimport { caretForwardCircle, close, heart, share, trash } from \"ionicons/icons\";\n\nimport ActionSheet from \"./UI/actionSheet\";\n\nconst Comments = (props) => {\n\tconst { list, avatar, view } = props;\n\tconst [isModalOpen, toggleModal] = useState(false);\n\tconst [replyparams, setreplyparams] = useState({\n\t\tpost_ID: \"\",\n\t\tcomment_post: \"\",\n\t\tcomment_post_title: \"\",\n\t\tcomment_parent: \"\",\n\t\tcomment_content: \"\",\n\t});\n\tconst [buttons, setButton] = useState({ isApproving: false, isDeleting: false, isSpamming: false });\n\tconst [showActionSheet, setShowActionSheet] = useState(false);\n\tconst [commentSelected, setcommentSelected] = useState(null);\n\n\tconst updateButtons = (button) => {\n\t\tsetButton({\n\t\t\t...buttons,\n\t\t\t[button.name]: true,\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\treplyparams.post_ID !== \"\" &&\n\t\t\treplyparams.comment_post !== \"\" &&\n\t\t\treplyparams.comment_post_title !== \"\" &&\n\t\t\treplyparams.comment_parent !== \"\" &&\n\t\t\treplyparams.comment_content !== \"\"\n\t\t) {\n\t\t\tlet notificationparams = prepareNotification();\n\t\t\tprops.onSendCommentReply(replyparams, notificationparams);\n\t\t}\n\t}, [replyparams]);\n\n\tuseEffect(() => {\n\t\tif (props.isSent) \n\t\t\ttoggleModal(false)\n\t}, [props.isSent])\n\n\tconst handleSubmit = (values) => {\n\t\tsetreplyparams({ ...replyparams, comment_content: values.contenuto });\n\t};\n\n\tconst prepareNotification = () => {\n\t\tlet title_it = replyparams.comment_post_title.split(\"/\")[0];\n\t\tlet title_en = replyparams.comment_post_title.split(\"/\")[1];\n\t\tlet message = {\n\t\t\tapp_id: ONESIGNAL_APP_ID,\n\t\t\tcontents: { en: \"Someone posted a new comment!\", it: \"Qualcuno ha scritto un nuovo commento!\" },\n\t\t\theadings: { en: title_en, it: title_it },\n\t\t\tios_badgeCount: 1,\n\t\t\tios_badgeType: \"Increase\",\n\t\t\tios_sound: \"nil\",\n\t\t\tandroid_sound: \"nil\",\n\t\t\tdata: { post: replyparams.comment_post },\n\t\t\tincluded_segments: [props.notificationSegment],\n\t\t\t// included_segments: [\"Subscribed Users\"],\n\t\t\t// included_segments: [\"TEST USERS\"],\n\t\t};\n\t\treturn message;\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Segment className=\"allcomments-component\">\n\t\t\t\t{list.map((comment, index) => {\n\t\t\t\t\tconst markAsSpam = () => {\n\t\t\t\t\t\treturn comment.status === \"spam\" ? (\n\t\t\t\t\t\t\t<Label as=\"a\" color=\"orange\" ribbon=\"left\">\n\t\t\t\t\t\t\t\tSpam\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t) : null;\n\t\t\t\t\t};\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Segment\n\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\tclassName={`p-0 \n\t\t\t\t\t\t\t\t${comment.status === \"spam\" && view !== \"spam\" ? \"hidden\" : \"\"} \n\t\t\t\t\t\t\t\t${comment.status !== \"spam\" && view !== \"all\" ? \"hidden\" : \"\"}`}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Card className=\"w-100\" key={index}>\n\t\t\t\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t\t\t\t{markAsSpam()}\n\t\t\t\t\t\t\t\t\t<Image floated=\"right\" size=\"mini\" src={avatar} />\n\t\t\t\t\t\t\t\t\t<Card.Header>{comment.author}</Card.Header>\n\t\t\t\t\t\t\t\t\t<Card.Meta>{comment.post_title}</Card.Meta>\n\t\t\t\t\t\t\t\t\t<Card.Meta>{moment(comment.date).fromNow()}</Card.Meta>\n\t\t\t\t\t\t\t\t\t<Card.Description>{comment.content}</Card.Description>\n\t\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t\t\t<Card.Content extra>\n\t\t\t\t\t\t\t\t\t<Button size=\"medium\" color=\"blue\" content=\"Azioni\" onClick={() => { setShowActionSheet(true); setcommentSelected(comment) }} />\n\t\t\t\t\t\t\t\t\t{comment.status !== \"1\" || comment.author === \"mychicmirror\" ? null : (\n\t\t\t\t\t\t\t\t\t\t<div className=\"right floated\">\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`${props.isLoading ? \"loading\" : \"\"}`}\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"green\"\n\t\t\t\t\t\t\t\t\t\t\t\tcontent=\"Rispondi\"\n\t\t\t\t\t\t\t\t\t\t\t\tlabelPosition=\"right\"\n\t\t\t\t\t\t\t\t\t\t\t\ticon=\"circular-icon reply\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetreplyparams({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t...replyparams,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost_ID: comment.comment_post,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomment_post: comment.comment_post,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomment_post_title: comment.post_title,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomment_parent: comment.comment_ID,\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\ttoggleModal(true);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<div className={`${comment.status === \"0\" ? \"ui bottom right attached red label\" : \"hidden\"}`}>Pending</div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Segment>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Segment>\n\t\t\t<Modal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tsubmitNotification={handleSubmit}\n\t\t\t\tmodalToggler={toggleModal}\n\t\t\t\ttype={{ title: false, title_content: \"Nuova Risposta\", content: \"comment\" }}\n\t\t\t/>\n\t\t\t<ActionSheet \n\t\t\t\tshowActionSheet={showActionSheet} \n\t\t\t\tcomment={commentSelected} \n\t\t\t\tonCommentUpdate={props.onCommentUpdate}\n\t\t\t\tdoRefresh={props.doRefresh} \n\t\t\t\tsetShowActionSheet={setShowActionSheet}\n\t\t\t/>\n\t\t</>\n\t);\n};\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisLoading: state.app.loading,\n\t\terror: state.app.error,\n\t\tisReplySent: state.user.replied.success,\n\t\tisSent: state?.toast?.isCompleted || null,\n\t\tnotificationSegment: state.app.notificationSegment\n\t};\n};\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonCommentUpdate: (params) => dispatch(updateComment(params)),\n\t\tonSendCommentReply: (replyparams, notificationparams) => dispatch(sendCommentReply(replyparams, notificationparams)),\n\t};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);\n","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/list.js",["141","142","143","144"],"/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/UI/skeleton.js",[],"/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/user.js",["145"],"import { isNil } from \"lodash\";\nimport React, { useState } from \"react\";\nimport {\n\tIonAlert,\n\tIonButton,\n\tIonCol,\n\tIonContent,\n\tIonFooter,\n\tIonGrid,\n\tIonHeader,\n\tIonIcon,\n\tIonLabel,\n\tIonPage,\n\tIonRefresher,\n\tIonRefresherContent,\n\tIonRow,\n\tIonSegment,\n\tIonSegmentButton,\n\tIonToolbar,\n\tuseIonViewWillEnter,\n} from \"@ionic/react\";\nimport { closeCircleOutline, notificationsCircle, refreshOutline, trashOutline } from \"ionicons/icons\";\nimport { connect } from \"react-redux\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport { sendNotification, userDelete, loadUserComments, sendCommentReply } from \"../store/actions/\";\n\nimport Placeholder from \"../components/UI/skeleton_list\";\nimport CommentsList from \"../components/comments\";\nimport Modal from \"../components/UI/modal\";\nimport UserUtilities from \"../components/user_utilities\";\nimport { ONESIGNAL_APP_ID } from \"../helpers/config\";\n\nconst User = (props) => {\n\tconst [showAlert, setShowAlert] = useState(false);\n\tconst [isRefreshing, doRefresh] = useState(false);\n\tconst [isModalOpen, toggleModal] = useState(false);\n\tconst [view, setView] = useState(\"comments\");\n\tconst [allComments, setAllComments] = useState(null);\n\tconst [commentsCount, setCommentsCount] = useState(null);\n\tconst [loading, setLoading] = useState(false);\n\n\tconst prepareNotification = (params) => {\n\t\tlet message = {\n\t\t\tapp_id: ONESIGNAL_APP_ID,\n\t\t\tcontents: { en: params.titolo },\n\t\t\theadings: { en: params.contenuto },\n\t\t\tios_badgeCount: 1,\n\t\t\tios_badgeType: \"Increase\",\n\t\t\tinclude_player_ids: [props.user.playerID],\n\t\t};\n\t\tprops.onSendNotification(message);\n\t};\n\n\tuseIonViewWillEnter(() => {\n\t\treadComments();\n\t});\n\n\tconst readComments = () => {\n\t\tsetLoading(true);\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst { comments, loading, count } = await props.onLoadComments({ user: props.user.email });\n\t\t\t\tsetAllComments(comments);\n\t\t\t\tsetLoading(loading);\n\t\t\t\tsetCommentsCount(count);\n\t\t\t\tconsole.log('comments, loading, count', comments, loading, count)\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t})();\n\t};\n\n\tconst refresh = (event) => {\n\t\tdoRefresh(true);\n\t\treadComments();\n\t\tsetTimeout(() => {\n\t\t\tdoRefresh(false);\n\t\t\tevent.detail.complete();\n\t\t}, 2000);\n\t};\n\n\tconst getComments = () => {\n\t\tif (isNil(commentsCount)) return <Placeholder rows={5} lines={2} image />;\n\t\tif (commentsCount === 0) return <IonLabel color=\"dark\">No comments so far</IonLabel>\n\t\treturn <CommentsList list={allComments} avatar={\"images/default_avatar.jpg\"} onReplySubmitted={commentReplyHandler} />;\n\n\t};\n\n\tconst commentReplyHandler = (values) => {\n\t\tconsole.log(\"commentReplyHandler\", values);\n\t\tprops.onCommentSubmitted(values);\n\t};\n\n\tconst handleSubmitNotification = (values) => {\n\t\tprepareNotification(values);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<IonPage id=\"user-card-detail\">\n\t\t\t\t<IonHeader collapse=\"condense\" className=\"ion-no-border\">\n\t\t\t\t\t<IonToolbar>\n\t\t\t\t\t\t<Card className=\"fluid raised toolbar-card\">\n\t\t\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t\t\t<Image className=\"right floated circular mini\" src=\"images/default_avatar.jpg\" />\n\t\t\t\t\t\t\t\t<Card.Header>{props.user.username}</Card.Header>\n\t\t\t\t\t\t\t\t<Card.Meta>{props.user.email}</Card.Meta>\n\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t\t\t{isNil(commentsCount) ? <Placeholder row={1} lines={1} /> : (\n\t\t\t\t\t\t\t\t\t<IonSegment value={view} onIonChange={(e) => setView(e.detail.value)}>\n\t\t\t\t\t\t\t\t\t\t<IonSegmentButton value=\"comments\">{isNil(commentsCount) || loading ? <Icon className=\"icons asterisk loading inverted grey\" /> : \"Comments: \" + commentsCount}</IonSegmentButton>\n\t\t\t\t\t\t\t\t\t\t<IonSegmentButton value=\"utility\">Utility</IonSegmentButton>\n\t\t\t\t\t\t\t\t\t</IonSegment>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</IonToolbar>\n\t\t\t\t</IonHeader>\n\t\t\t\t<IonContent>\n\t\t\t\t\t<IonGrid>\n\t\t\t\t\t\t<IonRow>\n\t\t\t\t\t\t\t<div className=\"user-component\">\n\t\t\t\t\t\t\t\t{props.user.username && (\n\t\t\t\t\t\t\t\t\t<Card className=\"fluid raised\">\n\t\t\t\t\t\t\t\t\t\t<Card.Content extra className={`${view === \"comments\" ? \"hidden\" : \"\"}`}>\n\t\t\t\t\t\t\t\t\t\t\t<UserUtilities {...props} />\n\t\t\t\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t\t\t\t\t<Card.Content extra className={`${view !== \"comments\" ? \"hidden\" : \"\"}`}>\n\t\t\t\t\t\t\t\t\t\t\t<IonRefresher slot=\"fixed\" onIonRefresh={refresh}>\n\t\t\t\t\t\t\t\t\t\t\t\t<IonRefresherContent\n\t\t\t\t\t\t\t\t\t\t\t\t\tpullingIcon={refreshOutline}\n\t\t\t\t\t\t\t\t\t\t\t\t\tpull-factor=\"200\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tpullingText=\"Pull to refresh\"\n\t\t\t\t\t\t\t\t\t\t\t\t\trefreshingSpinner=\"crescent\"\n\t\t\t\t\t\t\t\t\t\t\t\t\trefreshingText=\"Refreshing...\"\n\t\t\t\t\t\t\t\t\t\t\t\t></IonRefresherContent>\n\t\t\t\t\t\t\t\t\t\t\t</IonRefresher>\n\t\t\t\t\t\t\t\t\t\t\t{getComments()}\n\t\t\t\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</IonRow>\n\t\t\t\t\t</IonGrid>\n\t\t\t\t</IonContent>\n\t\t\t\t<IonAlert\n\t\t\t\t\tisOpen={showAlert}\n\t\t\t\t\theader=\"Delete User\"\n\t\t\t\t\tsubHeader={props.user.email}\n\t\t\t\t\tmessage={`Do you really want to delete this user?\\n ${props.user.username} id: ${props.user.id} `}\n\t\t\t\t\tbuttons={[\n\t\t\t\t\t\t\"Cancel\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: \"Ok\",\n\t\t\t\t\t\t\thandler: () => {\n\t\t\t\t\t\t\t\tprops.onDeleteUser({ id: props.user.id });\n\t\t\t\t\t\t\t\tprops.closeModal(false);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t]}\n\t\t\t\t\tonDidDismiss={() => setShowAlert(false)}\n\t\t\t\t/>\n\t\t\t\t<IonFooter>\n\t\t\t\t\t<IonToolbar className=\"action-toolbar\">\n\t\t\t\t\t\t<IonGrid className=\"py-0\">\n\t\t\t\t\t\t\t<IonRow>\n\t\t\t\t\t\t\t\t<IonCol className=\"py-0\">\n\t\t\t\t\t\t\t\t\t<IonButton\n\t\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\t\tfill=\"clear\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => toggleModal(true)}\n\t\t\t\t\t\t\t\t\t\tclassName={`ui basic ${props.isSending ? \"ui basic loading disabled\" : \"\"} ${!props.user.playerID ? \"ui basic disabled\" : \"\"\n\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<IonIcon slot=\"icon-only\" icon={notificationsCircle} />\n\t\t\t\t\t\t\t\t\t</IonButton>\n\t\t\t\t\t\t\t\t</IonCol>\n\t\t\t\t\t\t\t\t<IonCol className=\"py-0\">\n\t\t\t\t\t\t\t\t\t<IonButton className=\"py-0\" color=\"danger\" onClick={() => setShowAlert(true)} fill=\"clear\">\n\t\t\t\t\t\t\t\t\t\t<IonIcon slot=\"icon-only\" icon={trashOutline} />\n\t\t\t\t\t\t\t\t\t</IonButton>\n\t\t\t\t\t\t\t\t</IonCol>\n\t\t\t\t\t\t\t\t<IonCol className=\"py-0\">\n\t\t\t\t\t\t\t\t\t<IonButton className=\"py-0\" onClick={() => props.closeModal(false)} color=\"dark\" fill=\"clear\">\n\t\t\t\t\t\t\t\t\t\t<IonIcon slot=\"icon-only\" icon={closeCircleOutline} />\n\t\t\t\t\t\t\t\t\t</IonButton>\n\t\t\t\t\t\t\t\t</IonCol>\n\t\t\t\t\t\t\t</IonRow>\n\t\t\t\t\t\t</IonGrid>\n\t\t\t\t\t</IonToolbar>\n\t\t\t\t</IonFooter>\n\t\t\t\t<Modal\n\t\t\t\t\topen={isModalOpen}\n\t\t\t\t\tsubmitNotification={handleSubmitNotification}\n\t\t\t\t\tmodalToggler={toggleModal}\n\t\t\t\t\ttype={{ title: true, title_content: \"Notifica personale\", content: \"notification\" }}\n\t\t\t\t/>\n\t\t\t</IonPage>\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\tconsole.log(\"[USERJS] state\", state);\n\treturn {\n\t\tisError: state.app.error,\n\t\tisSending: state.app.loading,\n\t\tnotificationResponse: state.app.notificationMessage,\n\t\tcomments: state.user.commentsList,\n\t\tisReplySent: state.toast?.isCompleted,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonSendNotification: (params) => dispatch(sendNotification(params)),\n\t\tonDeleteUser: (params) => dispatch(userDelete(params)),\n\t\tonLoadComments: (params) => dispatch(loadUserComments(params)),\n\t\tonCommentSubmitted: (params) => dispatch(sendCommentReply(params)),\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(User);\n","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/store/actions/index.js",[],"/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/UI/actionSheet.js",["146","147"],"import React, { useState, useEffect } from \"react\";\nimport { IonActionSheet } from \"@ionic/react\";\nimport { close } from \"ionicons/icons\";\n\nconst ActionSheet = ({ showActionSheet, comment, onCommentUpdate, doRefresh, setShowActionSheet }) => {\n\tconst mybuttons = [\n\t\t{\n\t\t\ttext: \"Approva\",\n\t\t\thandler: () => {\n\t\t\t\tonCommentUpdate({ id: comment.comment_ID, status: \"1\", operation: \"update\" });\n\t\t\t\tdoRefresh();\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttext: \"Disapprova\",\n\t\t\thandler: () => {\n\t\t\t\tonCommentUpdate({ id: comment.comment_ID, status: \"0\", operation: \"update\" });\n\t\t\t\tdoRefresh();\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttext: \"Sposta in spam\",\n\t\t\thandler: () => {\n\t\t\t\tonCommentUpdate({ id: comment.comment_ID, status: \"1\", operation: \"update\" });\n\t\t\t\tdoRefresh();\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttext: \"Elimina\",\n\t\t\trole: \"destructive\",\n\t\t\thandler: () => {\n\t\t\t\tonCommentUpdate({ id: comment.comment_ID, status: \"\", operation: \"delete\" });\n\t\t\t\tdoRefresh();\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttext: \"Annulla\",\n\t\t\ticon: close,\n\t\t\trole: \"cancel\",\n\t\t},\n\t];\n\n\treturn (\n\t\t<IonActionSheet\n\t\t\tisOpen={showActionSheet}\n\t\t\tonDidDismiss={() => setShowActionSheet(false)}\n\t\t\tcssClass=\"my-custom-class\"\n\t\t\tbuttons={mybuttons}\n\t\t/>\n\t)\n}\nexport default ActionSheet;","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/store/actions/users.js",[],"/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/store/actions/main.js",[],"/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/store/actions/toast.js",[],"/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/store/actions/admin.js",[],"/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/helpers/config.js",[],"/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/user_utilities.js",["148","149","150"],"import React, { useState } from \"react\";\nimport {\n\tIonCard,\n\tIonCardContent,\n\tIonCardHeader,\n\tIonContent,\n\tIonIcon,\n\tIonItem,\n\tIonLabel,\n\tIonList,\n\tIonListHeader,\n\tIonNote,\n\tIonToggle,\n} from \"@ionic/react\";\nimport { logInOutline } from \"ionicons/icons\";\nimport { Message, Segment } from \"semantic-ui-react\";\n\nconst UserUtilities = ({user}) => {\n\tconst [login, setLogin] = useState(\"not tested\");\n\tconst [checked, setChecked] = useState(false);\n\treturn (\n\t\t<IonContent>\n\t\t\t<IonCard>\n\t\t\t\t<IonCardHeader>Settings</IonCardHeader>\n\t\t\t\t<IonCardContent>\n\t\t\t\t\t<Message className={`${user.playerID ? \"positive\" : \"negative\"}`}>\n\t\t\t\t\t\t<Message.Header>OneSignal ID</Message.Header>\n\t\t\t\t\t\t<Message.Content>{user.playerID || \"Not yet registered\"}</Message.Content>\n\t\t\t\t\t</Message>\n\t\t\t\t\t<IonList>\n\t\t\t\t\t\t<IonItem onClick={() => console.log(\"click\")}>\n\t\t\t\t\t\t\t<IonIcon icon={logInOutline} slot=\"start\"></IonIcon>\n\t\t\t\t\t\t\tTest login\n\t\t\t\t\t\t\t<IonNote slot=\"end\">{login}</IonNote>\n\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t<IonItem>\n\t\t\t\t\t\t\t<IonLabel>Reset Password</IonLabel>\n\t\t\t\t\t\t\t<IonToggle\n\t\t\t\t\t\t\t\tchecked={checked}\n\t\t\t\t\t\t\t\tonIonChange={(e) => {\n\t\t\t\t\t\t\t\t\tsetChecked(e.detail.checked);\n\t\t\t\t\t\t\t\t\tconsole.log(\"check\", e.detail.checked);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tcolor=\"danger\"\n\t\t\t\t\t\t\t\tslot=\"end\"\n\t\t\t\t\t\t\t></IonToggle>\n\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t</IonList>\n\t\t\t\t</IonCardContent>\n\t\t\t</IonCard>\n\t\t</IonContent>\n\t);\n};\nexport default UserUtilities;\n","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/UI/modal.js",["151"],"import { IonModal } from \"@ionic/react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Dimmer, Loader, Modal } from \"semantic-ui-react\";\n\nimport NotificationForm from \"../forms/notification\";\n\nconst ModalNotification = (props) => {\n\tconst [dimmerState, setDimmer] = useState(false);\n\tuseEffect(() => {\n\t\tsetDimmer(false);\n\t}, []);\n\tconst handleSubmit = (values) => {\n\t\tsetDimmer(true);\n\t\tprops.submitNotification({ titolo: values.titolo, contenuto: values.commento });\n\t};\n\n\treturn (\n\n\t\t<IonModal\n\t\t\tisOpen={props.open}\n\t\t\tcssClass='comment-modal-class'\n\t\t\tswipeToClose={true}\n\t\t\tpresentingElement={undefined}\n\t\t\tonDidDismiss={() => props.modalToggler(false)}>\n\t\t\t<Card fluid classname=\"animate__fadeInUp animate__delay-2s\">\n\t\t\t\t<Card.Content>\n\t\t\t\t\t<Dimmer className={dimmerState ? \"active\" : \"\"}>\n\t\t\t\t\t\t<Loader inverted>Sending...</Loader>\n\t\t\t\t\t</Dimmer>\n\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t{props.type.title_content}\n\t\t\t\t\t</Card.Header>\n\t\t\t\t</Card.Content>\n\t\t\t\t<Card.Content>\n\t\t\t\t\t<NotificationForm onSubmit={handleSubmit} type={props.type} />\n\t\t\t\t</Card.Content>\n\t\t\t</Card>\n\t\t</IonModal>\n\t);\n};\n\nexport default ModalNotification;\n","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/comments.js",["152","153"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { IonItem, IonItemOption, IonItemOptions, IonItemSliding, IonList } from \"@ionic/react\";\nimport { Comment } from \"semantic-ui-react\";\nimport Modal from \"../components/UI/modal\";\nimport { sendCommentReply } from \"../store/actions\";\nimport { ONESIGNAL_APP_ID } from \"../helpers/config\";\nimport moment from \"moment\";\n\nconst Comments = (props) => {\n\tconst { onReplySubmitted, avatar, list } = props;\n\tconst [isModalOpen, toggleModal] = useState(false);\n\tconst [replyparams, setreplyparams] = useState({post_ID: \"\",comment_post: \"\",comment_post_title: \"\",comment_parent: \"\",comment_content: \"\"});\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\treplyparams.post_ID !== \"\" &&\n\t\t\treplyparams.comment_post !== \"\" &&\n\t\t\treplyparams.comment_post_title !== \"\" &&\n\t\t\treplyparams.comment_parent !== \"\" &&\n\t\t\treplyparams.comment_content !== \"\"\n\t\t) {\n\t\t\tlet notificationparams = prepareNotification();\n\t\t\tprops.onSendCommentReply(replyparams, notificationparams);\n\t\t}\n\t}, [replyparams]);\n\t\n\tconst prepareNotification = () => {\n\t\tlet title_it = replyparams.comment_post_title.split(\"/\")[0];\n\t\tlet title_en = replyparams.comment_post_title.split(\"/\")[1];\n\t\tlet message = {\n\t\t\tapp_id: ONESIGNAL_APP_ID,\n\t\t\tcontents: { en: \"Someone posted a new comment!\", it: \"Qualcuno ha scritto un nuovo commento!\" },\n\t\t\theadings: { en: title_en, it: title_it },\n\t\t\tios_badgeCount: 1,\n\t\t\tios_badgeType: \"Increase\",\n\t\t\tios_sound: \"nil\",\n\t\t\tandroid_sound: \"nil\",\n\t\t\tdata: { post: replyparams.comment_post },\n\t\t\tincluded_segments: [\"TEST USERS\"],\n\t\t};\n\t\treturn message;\n\t};\n\n\tconst handleSubmit = (values) => {\n\t\tsetreplyparams({ ...replyparams, comment_content: values.contenuto });\n\t\tprepareNotification();\n\t};\n\n\treturn (\n\t\t<IonList>\n\t\t\t{list.map((comment, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<IonItemSliding className=\"comments-component\" key={index}>\n\t\t\t\t\t\t<IonItem>\n\t\t\t\t\t\t\t<Comment.Group>\n\t\t\t\t\t\t\t\t<Comment>\n\t\t\t\t\t\t\t\t\t<Comment.Avatar className=\"circular\" as=\"a\" src={avatar} />\n\t\t\t\t\t\t\t\t\t<Comment.Content>\n\t\t\t\t\t\t\t\t\t\t<Comment.Author as=\"a\">{comment.post_title}</Comment.Author>\n\t\t\t\t\t\t\t\t\t\t<Comment.Metadata>\n\t\t\t\t\t\t\t\t\t\t\t<div>{moment(comment.date).fromNow()}</div>\n\t\t\t\t\t\t\t\t\t\t</Comment.Metadata>\n\t\t\t\t\t\t\t\t\t\t<Comment.Text>{comment.content}</Comment.Text>\n\t\t\t\t\t\t\t\t\t</Comment.Content>\n\t\t\t\t\t\t\t\t</Comment>\n\t\t\t\t\t\t\t</Comment.Group>\n\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t<IonItemOptions side=\"end\">\n\t\t\t\t\t\t\t<IonItemOption\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsetreplyparams({\n\t\t\t\t\t\t\t\t\t\t...replyparams,\n\t\t\t\t\t\t\t\t\t\tpost_ID: comment.comment_post,\n\t\t\t\t\t\t\t\t\t\tcomment_post: comment.comment_post,\n\t\t\t\t\t\t\t\t\t\tcomment_post_title: comment.post_title,\n\t\t\t\t\t\t\t\t\t\tcomment_parent: comment.comment_ID,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\ttoggleModal(true);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tReply\n\t\t\t\t\t\t\t</IonItemOption>\n\t\t\t\t\t\t</IonItemOptions>\n\t\t\t\t\t</IonItemSliding>\n\t\t\t\t);\n\t\t\t})}\n\n\t\t\t<Modal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tsubmitNotification={handleSubmit}\n\t\t\t\tmodalToggler={toggleModal}\n\t\t\t\ttype={{ title: false, title_content: \"Nuova Risposta\", content: \"comment\" }}\n\t\t\t/>\n\t\t</IonList>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisLoading: state.app.loading,\n\t\terror: state.app.error,\n\t\tisReplySent: state.user.replied.success,\n\t};\n};\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonSendCommentReply: (replyparams, notificationparams) => dispatch(sendCommentReply(replyparams, notificationparams)),\n\t};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);\n","/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/UI/skeleton_list.js",[],"/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/helpers/rest.js",[],"/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/forms/notification.js",[],"/Volumes/DEIMOS/IONIC APPS/mychicmirror-admin/src/components/forms/render.js",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":224,"column":1,"nodeType":"160","endLine":224,"endColumn":37},{"ruleId":"161","severity":1,"message":"162","line":33,"column":5,"nodeType":"163","endLine":33,"endColumn":40,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":2,"column":17,"nodeType":"167","messageId":"168","endLine":2,"endColumn":26},{"ruleId":"165","severity":1,"message":"169","line":27,"column":9,"nodeType":"167","messageId":"168","endLine":27,"endColumn":21},{"ruleId":"165","severity":1,"message":"170","line":3,"column":24,"nodeType":"167","messageId":"168","endLine":3,"endColumn":28},{"ruleId":"165","severity":1,"message":"171","line":9,"column":10,"nodeType":"167","messageId":"168","endLine":9,"endColumn":28},{"ruleId":"165","severity":1,"message":"172","line":9,"column":30,"nodeType":"167","messageId":"168","endLine":9,"endColumn":35},{"ruleId":"165","severity":1,"message":"173","line":9,"column":37,"nodeType":"167","messageId":"168","endLine":9,"endColumn":42},{"ruleId":"165","severity":1,"message":"174","line":9,"column":44,"nodeType":"167","messageId":"168","endLine":9,"endColumn":49},{"ruleId":"165","severity":1,"message":"175","line":9,"column":51,"nodeType":"167","messageId":"168","endLine":9,"endColumn":56},{"ruleId":"165","severity":1,"message":"176","line":27,"column":8,"nodeType":"167","messageId":"168","endLine":27,"endColumn":21},{"ruleId":"161","severity":1,"message":"177","line":45,"column":5,"nodeType":"163","endLine":45,"endColumn":18,"suggestions":"178"},{"ruleId":"165","severity":1,"message":"179","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":14},{"ruleId":"165","severity":1,"message":"170","line":4,"column":16,"nodeType":"167","messageId":"168","endLine":4,"endColumn":20},{"ruleId":"165","severity":1,"message":"180","line":4,"column":22,"nodeType":"167","messageId":"168","endLine":4,"endColumn":27},{"ruleId":"165","severity":1,"message":"181","line":4,"column":29,"nodeType":"167","messageId":"168","endLine":4,"endColumn":36},{"ruleId":"165","severity":1,"message":"169","line":35,"column":9,"nodeType":"167","messageId":"168","endLine":35,"endColumn":21},{"ruleId":"165","severity":1,"message":"182","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":1,"column":27,"nodeType":"167","messageId":"168","endLine":1,"endColumn":36},{"ruleId":"165","severity":1,"message":"183","line":11,"column":2,"nodeType":"167","messageId":"168","endLine":11,"endColumn":15},{"ruleId":"165","severity":1,"message":"181","line":16,"column":19,"nodeType":"167","messageId":"168","endLine":16,"endColumn":26},{"ruleId":"165","severity":1,"message":"184","line":19,"column":16,"nodeType":"167","messageId":"168","endLine":19,"endColumn":24},{"ruleId":"165","severity":1,"message":"185","line":3,"column":32,"nodeType":"167","messageId":"168","endLine":3,"endColumn":37},{"ruleId":"165","severity":1,"message":"186","line":11,"column":10,"nodeType":"167","messageId":"168","endLine":11,"endColumn":26},{"ruleId":"161","severity":1,"message":"177","line":26,"column":5,"nodeType":"163","endLine":26,"endColumn":18,"suggestions":"187"},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["190"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'isRefreshing' is assigned a value but never used.","'Icon' is defined but never used.","'caretForwardCircle' is defined but never used.","'close' is defined but never used.","'heart' is defined but never used.","'share' is defined but never used.","'trash' is defined but never used.","'updateButtons' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'prepareNotification' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["191"],"'Card' is defined but never used.","'Label' is defined but never used.","'Segment' is defined but never used.","'useState' is defined but never used.","'IonListHeader' is defined but never used.","'setLogin' is assigned a value but never used.","'Modal' is defined but never used.","'onReplySubmitted' is assigned a value but never used.",["192"],"no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"195","fix":"197"},"Update the dependencies array to be: [isRefreshing, props, props.isUserCreated]",{"range":"198","text":"199"},"Update the dependencies array to be: [prepareNotification, props, replyparams]",{"range":"200","text":"201"},{"range":"202","text":"201"},[854,889],"[isRefreshing, props, props.isUserCreated]",[1502,1515],"[prepareNotification, props, replyparams]",[1037,1050]]